{
  "triple sentences": {
  },
  "graph walk sentences": {
    "depth": 4,
    "max walks": 10
  },
  "triple sentence sgns": {
    "embedding size": 300,
    "window size": 2,
    "initial learning rate": 0.25,
    "min count": 5,
    "subsampling": 0.00001,
    "negative sampling": 15,
    "iterations": 5,
    "max vocab": 5000000,
    "embeddings path": "/home/alex/PycharmProjects/thesis/data/algorithm_io/simple_sentence_class_embeddings-20161107"
  },
  "graph walk sentence sgns": {
    "embedding size": 300,
    "window size": 2,
    "initial learning rate": 0.25,
    "min count": 5,
    "subsampling": 0.00001,
    "negative sampling": 15,
    "iterations": 5,
    "max vocab": 5000000,
    "embeddings path": "/home/alex/PycharmProjects/thesis/data/algorithm_io/graph_walk_class_embeddings-20161107"
  },
  "most-common": {
  },
  "distance-knn (k=5)": {
    "neighbors": 5
  },
  "distance-knn (k=10)": {
    "neighbors": 10
  },
  "distance-knn (k=15)": {
    "neighbors": 15
  },
  "distance-knn (k=20)": {
    "neighbors": 20
  },
  "linear projection (c=1)": {
    "clusters": 1,
    "sgd iterations": 10
  },
  "linear projection (c=10)": {
    "clusters": 10,
    "sgd iterations": 10
  },
  "linear projection (c=25)": {
    "clusters": 25,
    "sgd iterations": 10
  },
  "linear projection (c=50)": {
    "clusters": 50,
    "sgd iterations": 10
  },
  "combinations": {
    "baseline": {
      "sequences": "",
      "sgns": "",
      "classification": "most-common"
    },
    "ts+distknn(k=5)": {
      "sequences": "triple sentences",
      "sgns": "triple sentence sgns",
      "classification": "distance-knn (k=5)"
    },
    "ts+distknn(k=10)": {
      "sequences": "triple sentences",
      "sgns": "triple sentence sgns",
      "classification": "distance-knn (k=10)"
    },
    "ts+distknn(k=15)": {
      "sequences": "triple sentences",
      "sgns": "triple sentence sgns",
      "classification": "distance-knn (k=15)"
    },
    "ts+distknn(k=20)": {
      "sequences": "triple sentences",
      "sgns": "triple sentence sgns",
      "classification": "distance-knn (k=20)"
    },
    "ts+linproj(c=1)": {
      "sequences": "triple sentences",
      "sgns": "triple sentence sgns",
      "classification": "linear projection (c=1)"
    },
    "ts+linproj(c=10)": {
      "sequences": "triple sentences",
      "sgns": "triple sentence sgns",
      "classification": "linear projection (c=10)"
    },
    "ts+linproj(c=25)": {
      "sequences": "triple sentences",
      "sgns": "triple sentence sgns",
      "classification": "linear projection (c=25)"
    },
    "ts+linproj(c=50)": {
      "sequences": "triple sentences",
      "sgns": "triple sentence sgns",
      "classification": "linear projection (c=50)"
    },
    "gw+distknn(k=5)": {
      "sequences": "graph walk sentences",
      "sgns": "graph walk sentence sgns",
      "classification": "distance-knn (k=5)"
    },
    "gw+distknn(k=10)": {
      "sequences": "graph walk sentences",
      "sgns": "graph walk sentence sgns",
      "classification": "distance-knn (k=10)"
    },
    "gw+distknn(k=15)": {
      "sequences": "graph walk sentences",
      "sgns": "graph walk sentence sgns",
      "classification": "distance-knn (k=15)"
    },
    "gw+distknn(k=20)": {
      "sequences": "graph walk sentences",
      "sgns": "graph walk sentence sgns",
      "classification": "distance-knn (k=20)"
    },
    "gw+linproj(c=1)" : {
      "sequences": "graph walk sentences",
      "sgns": "graph walk sentence sgns",
      "classification": "linear projection (c=1)"
    },
    "gw+linproj(c=25)" : {
      "sequences": "graph walk sentences",
      "sgns": "graph walk sentence sgns",
      "classification": "linear projection (c=25)"
    },
    "gw+linproj(c=50)" : {
      "sequences": "graph walk sentences",
      "sgns": "graph walk sentence sgns",
      "classification": "linear projection (c=50)"
    }
  }
}