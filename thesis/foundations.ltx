\subsection{Definitions}
\begin{definition}[Directed Graph]
A graph G is an ordered pair $G=(V, E)$, where $V$ is a set of vertices, and $E = \{ (v_1, v_2) \mid v_1, v_2 \in V \}$ 
is a set of ordered pairs called directed edges, connecting the the vertices.
\end{definition}
\begin{definition}[Predecessor, Successor]
Let $G=(V, E)$ be a directed graph.\\
$v_1 \in V$ is a predecessor of $v_2 \in V$, if there exists an edge so that $(v_1, v_2) \in E$.\\
Let $v \in V$ be a vertice of G, then $pred(v) = \{ w \mid (w, v) \in E \}$ is the set of predecessors of $v$. \\
$v_1 \in V$ is a successor of $v_2 \in V$, if there exists an edge so that $(v_2, v_1) \in E$.\\
Let $v \in V$ be a vertice of G, then $succ(v) = \{ w \mid (v, w) \in E \}$ is the set of successors of $v$.
\end{definition}
\begin{definition}[Walk]
Let $G = (V, E)$ be a directed graph. \\
A walk $W$ of length $n \in \mathbb{N}$ is a sequence of vertices $W=(v_1,\ldots, v_n)$ with $v_1,\ldots, v_n \in V$, 
so that $(v_i, v_{i+1}) \in E \; \forall i=1,\ldots,n-1$.
\end{definition}
\begin{definition}[Cycle]
A walk $W=(v_1,\ldots, v_n)$ of length $n$ is called a cycle, if $v_1 = v_n$.
\end{definition}
\begin{definition}[Path]
A walk $P = (v_1, \ldots, v_n)$ is a path from $v_1$ to $v_n$, if $v_i \neq v_j$ for all $i,j=1,\ldots,n$ with $i \neq j$.
\end{definition}
\begin{definition}[Acyclic Graph]
A directed graph $G$ is called acyclic graph, if there are no cycles in $G$.
\end{definition}
\begin{definition}[Statement]
\TODO{Define statement.}
\end{definition}
\begin{definition}[Class]
A class is a tuple $(id, label, Statements, Instances, wiki)$:
	\begin{itemize}
	\item $id \in \mathbb{N}$, which is a numerical Wikidata item ID;
	\item $label$, which is the, to $id$ corresponding,  English label in Wikidata;
	\item $Statements$ is a set of statements about the class;
	\item $Instances \in \mathcal{P}(\mathbb{N})$ is the set of numerical Wikidata item IDs, which are instances of 
	the class;
	\item $wiki$ is the, to the class corresponding, English Wikipedia article text.
	\end{itemize}
\end{definition}
\begin{definition}[Taxonomy]
A taxonomy $T=(C, S)$ is a acyclic graph, where $C$ is a set of classes, and $S$ is a set of subclass-of relations
between these classes.
\end{definition}
\begin{definition}[Subclass Relation]
Let $T=(C, S)$ be a taxonomy.\\
The transitive, ordered relation $\subclassof$ is defined.\\
Let $c_1, c_2 \in C$. $c_1 \subclassof c_2$, if there is a path $P=(c_1, \ldots, c_2)$ from $c_1$ to $c_2$ in $T$.
\end{definition}
\begin{definition}[Root class]
Let $T=(C, S)$ be a taxonomy.\\
$r \in C$ is called root class of $T$, if $|succ(r)| = 0$.\\
$root(T) = \{r \in C \mid  |succ(r)| = 0\}$ is the set of all root classes in $T$.
\end{definition}
Finally we can define our problem as the following task:
\begin{problem}
Let $W_1$ be the taxonomy of Wikidata, where only labeled root classes are considered. 
On 7th November 2016 the following state applies  $|root(W_1)| = 5332$. \\
$W_1 = (C, S)$ is the input for the described problem. \\
Let $W_2$ be the refined output taxonomy. \\
A refinement method is needed to significantly reduce the number of root classes in the Wikidata taxonomy. After 
the refinement method is applied on $W_1$, which outputs $W_2$, the following should be true: 
$|root(W_2)| \ll |root(W_1)|$.\\
\\
The refinement process can be  reduced to the following smaller task: \\
Let $r \in root(W_1)$.\\
Find a $c \in C$ with $\neg (c \subclassof r)$, so that $c$ is the most similar super class of $r$. \\
Connecting $r$ to $c$ with an edge produces the output taxonomy $W_2 = (C, S \cup \{ (r, c) \})$. 
Accordingly $|root(W_2)| = |root(W_1)| - 1$ applies.\\
Repeating this smaller task will eventually yield $|W_2| \ll |W_1|$.\\
\\
The problem can therefore be defined as developing a method, which finds, given a taxonomy $W=(C,S)$ and a 
root class $r = root(W)$, the most similar superclass of $r$.
\end{problem}